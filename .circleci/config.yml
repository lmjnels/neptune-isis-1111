version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.1
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: cimg/php:8.1.11
      - image: cimg/node:16.14.0

    steps:
      - browser-tools/install-browser-tools
      - checkout

      - run:
          name: "Prepare Environment"
          command: |
            sudo apt update
            sudo docker-php-ext-install zip

      - run:
          name: "Setup Environment"
          command: |
            mv .env.testing .env
            touch ./storage/logs/laravel.log

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: "Install Dependencies"
          command: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - run:
          name: "Generate App key"
          command: php artisan key:generate

      # Node
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-

      - run:
          name: Install Node Dependencies
          command: |
            npm config set @gsap:registry https://npm.greensock.com/
            npm config set //npm.greensock.com/:_authToken ${GSAP_TOKEN}
            node --version
            npm --version
            npm install



      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run:
          name: Run npm build
          command: npm run build

      - run:
          name: "Install Sqlite"
          command: sudo apt-get install php-sqlite3

      - run:
          name: "Create database and run migration"
          command: |
            touch database/database.sqlite
            php artisan migrate --force --env=testing

      # run tests
      - run:
          name: "Run Unit Tests"
          command: ./vendor/bin/phpunit tests/Unit

      - run:
          name: "Run Http Tests"
          command: ./vendor/bin/phpunit tests/Feature
